doctype html
html(lang="en")
    head
        include ./includes/socket.jade
        link(rel='stylesheet', type='text/css', href='./css/index.css')
        script(type='text/javascript').
              var socket;
              var firstconnect = true;
              function connect() {
                  if(firstconnect) {
                      socket = io.connect(null);
                                    socket.on('message', function(data){ message(data); });
                      socket.on('this', function(data){ message(data); });
                                    socket.on('connect', function(){
                           status_update("Connected to Server");
                           socket.emit('myBoss',{message:'nihaoa'});
                           socket.send("Hello Server!");
                      });
                      socket.on('disconnect', function(){ message("Disconnected from Server"); });
                      socket.on('reconnect', function(){ status_update("Reconnected to Server"); });
                      socket.on('reconnecting', function( nextRetry ){ status_update("Reconnecting in "
                      + nextRetry + " times"); });
                      socket.on('reconnect_failed', function(){ message("Reconnect Failed"); });
                                    firstconnect = false;
                  } else {
                      socket.socket.reconnect();
                  }
              }
              function disconnect() {
                  socket.disconnect();
              }
              function message(data) {
                  document.getElementById('message').innerHTML = "Server says: " + data;
              }
              function status_update(txt){
                  document.getElementById('status').innerHTML = txt;
              }
              function esc(msg){
                  return msg.replace(/</g, '<').replace(/>/g, '>');
              }
              function send() {
                  socket.emit('hellow','nihao');
              };
    body
        h1 Socket.io Test
        div
            p(id="status") Waiting for input
        div
            p(id="message")
        button(id="connect" onClick="connect()") connect
        button(id="disconnect" onClick="disconnect()") Disconnect
        button(id="send" onClick="send()") Send Message