/**
 * Created by w44 on 15-1-7.
 */


var cons = require('print_constants');
var msgParam = cons.msgParam;

var DataUtil = function () {
};

DataUtil.prototype.parseHeadNode = function (dataBuf) {
    var headNode={};
    var encoding = msgParam.encoding;
    try{
    headNode.packageLength = dataBuf.readInt32BE(msgParam.packageBufIndex.start, msgParam.packageBufIndex.end);
    headNode.cmd = dataBuf.toString(encoding, msgParam.cmdBufIndex.start, msgParam.cmdBufIndex.end);
    headNode.sequenceId = dataBuf.toString(encoding, msgParam.sequenceIdBufIndex.start, msgParam.sequenceIdBufIndex.end);
    headNode.terminalId = dataBuf.toString(encoding, msgParam.terminalIdBufIndex.start, msgParam.terminalIdBufIndex.end);
    }catch (err){
       console.log('头信息解析出错！');
       console.log(err);
       headNode = null;
    }
    return headNode;
};


DataUtil.prototype.handleForBodyNode = function(headNode , cmdDataBuf){
    var self = this;
    var method='parse'+headNode.cmd;
    return self[method](headNode,cmdDataBuf);
};


DataUtil.prototype.parse0001 = function(headNode,buf){
    var bodyNode={};
    bodyNode.terminalid = headNode.terminalId;
    return bodyNode;
};

DataUtil.prototype.parse0002 = function(headNode,buf){
    var bodyNode={};
    bodyNode.retCode = buf.toString(prop.encoding, 0, 4);
    //转化弄成中文
    var tempBuf = new Buffer(buf.length - 4);
    buf.copy(tempBuf, 0, 4, buf.length);
    var gb2312_to_utf8_iconv = new Iconv('gb2312', 'utf8');
    var utf8_buffer = gb2312_to_utf8_iconv.convert(tempBuf);
    bodyNode.retDesc = utf8_buffer.toString(prop.encoding);
    return bodyNode;
};



module.exports = new DataUtil();