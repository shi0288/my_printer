/**
 * Created by w44 on 15-1-12.
 */
var http = require('http');
var querystring = require('querystring');
var moment = require('moment');
var cons = require('print_constants');
var nodePlatCons = cons.nodePlatCons;

var digestUtil = require('./DigestUtil');


var HttpUtil = function () {
};

HttpUtil.prototype.send = function (opt, data, cb) {
    console.log("post send：" + JSON.stringify(data));
    console.log("post：" + JSON.stringify(opt));
    var post_data = querystring.stringify({
        message: data
    });
    var req = http.request(opt, function (res) {
        var data = '';
        res.setEncoding('utf8');
        res.on('data', function (chunk) {
            if (res.statusCode == 200) {
                data += chunk;
            } else {
                console.info('服务器返回的状态码有误');
                console.info(chunk);
                setTimeout(function () {
                    cb('err', null);
                }, 1000);
            }
        });
        res.on('end', function () {
            console.info('服务器返回信息');
            console.info(data);
            cb(null, data);
        });
    });

    req.on('error', function (e) {
        console.info('problem with request: ' + e.message);
        setTimeout(function () {
            cb('err', body);
        }, 1000);
    });
    req.write(post_data, "utf8");
    req.end();
};


HttpUtil.prototype.sendToNodePlat = function(cmd,body, cb)
{
    console.log(cb);
    body.uniqueId = digestUtil.createUUID();
    var bodyStr = JSON.stringify(body);

    var head = nodePlatCons.head;
    head.cmd = cmd;
    head.timestamp = moment().format("YYYY-MM-DD HH:mm:ss");
    var encodedBody = bodyStr;
    if(head.digestType.length > 0)
    {
        encodedBody = digestUtil.generate(head, nodePlatCons.key, bodyStr);
    }
    var msgJson = {head:head, body:encodedBody};
    var msgToSend = JSON.stringify(msgJson);
    console.log("send:  "+msgToSend);
    var post_data  = querystring.stringify({
        message:msgToSend
    });
    var headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length':post_data.length
    };
    nodePlatCons.node_plat_opt.headers = headers;
    var req = http.request(nodePlatCons.node_plat_opt, function(res) {
        res.setEncoding('utf8');
        var data = '';
        res.on('data', function (chunk) {
            data += chunk;
        });
        res.on('end', function(){
            console.log("receive:  "+data);
            cb(null, JSON.parse(data));
        });
    });
    req.setTimeout(20000, function(){
        cb(new Error("time out"), null);
    });
    req.on('error', function(e) {
        cb(e, null);
    });
    req.write(post_data, "utf8");
    req.end();
};



var httpUtil = new HttpUtil();
module.exports = httpUtil;