/**
 * Created by obzerg on 14-9-23.
 */
var gameCodeTrans = require('./TerminalDataUtil.js');
var log = require('./Log4js.js');


var CheckNumberUtil = function () {
};

CheckNumberUtil.prototype.check = function (ticket, data) {
    var result = true;
    //首先获取游戏名,玩法,等信息
    var gameCode = ticket.gameCode;
    var playTypeCode = ticket.playTypeCode;
    var betTypeCode = ticket.betTypeCode;
    var numbers = ticket.numbers;
    var ticketName = gameCodeTrans.gameCodeTrans[gameCode].playType[playTypeCode + betTypeCode].name;
    log.info('---开始校验---');
    log.info(ticketName);
    var transArr = gameCodeTrans.getNumbers(data);
    log.info(transArr[0]);

    if (transArr[0] != ticketName) { //打出的票与预计的票不是同一种玩法
        return false;
    }
    if (betTypeCode == '00') {//单式
        //单式票可能有很多组号码,但是不会超过5组,所以应该先切分出每一组号码
        var numberArr = numbers.split(/;/g);
        log.info('终端机原始信息');
        log.info(transArr);
        for (var i = 0; i < numberArr.length; i++) {
            log.info('终端机结果');
            log.info(transArr[i + 2]);

            var num = numberArr[i].replace(/\D/g, '');
            log.info('平台结果');
            log.info(num);

            if (num != transArr[i + 2]) { //票面信息不一致
                result = false;
            }

        }
    } else if (betTypeCode == '01' || betTypeCode == '03' || betTypeCode == '06') { //复式&和值&跨度
        //复式票只有一组号码,但是可能会换行,注意叠加
        var tNumber = transArr[1] + transArr[2] + transArr[3] + transArr[4] + transArr[5];
        numbers = numbers.replace(/\D/g, '');
        log.info('终端机原始信息');
        log.info(transArr);
        log.info('终端机结果');
        log.info(tNumber);
        log.info('平台结果');
        log.info(numbers);
        if (tNumber != numbers) {
            result = false;
        }
    } else if (betTypeCode == '02') { //胆拖
        //胆的角标为2,拖为4+5
        log.info('终端机原始信息');
        log.info(transArr);
        log.info('终端机结果');
        var tDan = transArr[3];
        var tTuo = transArr[4] + transArr[5] + transArr[6];
        log.info(tDan);
        log.info(tTuo);

        var number = numbers.split(/\$/g);
        var d = number[0].replace(/\D/g, '');
        var t = number[1].replace(/\D/g, '');

        log.info('平台结果');
        log.info(d);
        log.info(t);

        if (tDan != d || tTuo != t) {
            result = false;
        }
    } else if (betTypeCode == '07') { //定位
        //有两组或者三组号码
        transArr = gameCodeTrans.getNumbers(data, 6);
        var arr = [];
        for (var i = 1; i < transArr.length; i++) {
            if (transArr[i] != "") {
                arr.push(transArr[i]);
            }
        }
        //先剔除数组中空数据
        numbers = ticket.numbers.split(/\|/g);
        log.info('终端机原始信息');
        log.info(arr);
        for (var i = 0; i < numbers.length; i++) {
            var num = numbers[i].replace(/\D/g, '');
            log.info('平台结果');
            log.info(num);
            log.info('终端机结果');
            log.info(arr[i]);

            if (num != arr[i]) { //票面信息不一致
                result = false;
            }
        }
    }
    return result;
};

CheckNumberUtil.prototype.checkMut = function (ticket, data) {

    if (ticket.gameCode != 'T51') {
        //倍数的index
        var mutIndex = data.indexOf('倍:');
        //金额的开始index
        var moneyStartIndex = data.indexOf('合计:');
        //金额的结束index
        var moneyEndIndex = data.indexOf('元');

        //获取倍数
        var mut = parseInt(data.substring(mutIndex, moneyStartIndex).replace(/\D/g, ''));
        log.info('---解析出的倍数---');
        log.info(mut);
        log.info('---原始倍数---');
        log.info(ticket.multiple);
        //获取金额
        var money = parseInt(data.substring(moneyStartIndex, moneyEndIndex).replace(/\D/g, '')) * 100;
        log.info('---解析出的钱数---');
        log.info(money);
        log.info('---原始钱数---');
        log.info(ticket.amount);


    } else {
        var indexOfMut = data.indexOf('倍数:');
        data = data.substr(indexOfMut);
        var indexOfMutEnd = data.indexOf('合计:');

        var mut = parseInt(data.substr(0, indexOfMutEnd).replace(/\D/g, ""));
        log.info('---解析出的倍数---');
        log.info(mut);
        log.info('---原始倍数---');
        log.info(ticket.multiple);
        var indexOfMoney = data.indexOf('元');
        var money = parseInt(data.substring(indexOfMutEnd, indexOfMoney).replace(/\D/g, "")) * 100;
        log.info('---解析出的钱数---');
        log.info(money);
        log.info('---原始钱数---');
        log.info(ticket.amount);
    }

    if (mut != ticket.multiple || ticket.amount != money) {
        return false;
    } else {
        return true;
    }

};


var checkNumberUtil = new CheckNumberUtil();
module.exports = checkNumberUtil;