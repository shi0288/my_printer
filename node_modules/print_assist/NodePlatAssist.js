/**
 * Created by w44 on 15-1-12.
 */

var moment = require('moment');
var util = require('print_util');
var httpUtil = util.httpUtil;

var cons = require('print_constants');
var nodePlatCons = cons.nodePlatCons;


var NodePlatAssist = function () {
};


NodePlatAssist.prototype.sent = function (cmd, bodyStr, cb) {
    httpUtil.sendToNodePlat(cmd, bodyStr, cb);
};

NodePlatAssist.prototype.sentP01 = function (cb) {
    var self = this;
    var body = {};
    self.sent(nodePlatCons.command.queryOrder, body, function (err, backMsgNode) {
        if (err) {
            cb(err, null);
        }
        else {
            cb(null, backMsgNode);
        }
    });
};


NodePlatAssist.prototype.sentP02 = function (ticket, cb) {
    var self = this;
    var body = {};
    //根据模式选择发送的body
    var rst = [];
    body.rst = rst;
    var _ticket = {
        id: parseFloat(ticket.id),
        status: nodePlatCons.ticket.status.success,
        province: 'bj',
        seq: ticket.ticketSeq,
        terminal: ticket.terminalId,
        rNumber: ''
    };
    //todo 在这里加上对竞彩的判断
    if (ticket.gameCode == 'T51') {
        var regExp = new RegExp('周.*[0-9]{3}\\n主队:.*Vs\\s客队:.*\\n\\n.*', 'g');
        var results = ticket.metaTicket.match(regExp);
        var now = moment().format('YYYYMMDD');
        results.forEach(function (item) {
            var arr = item.split('\n');
            var day = arr[0].replace('周日', 7).replace('周一', 1).replace('周二', 2).replace('周三', 4).replace('周四', 4).replace('周五', 5).replace('周六', 6);
            var pl = arr[3].replace(/\s+/g, '').replace(/\+/g, ',').replace(/元/g, '').replace('负', 0).replace('平', 1).replace('胜', 2);
            _ticket.rNumber += ticket.playTypeCode + '|' + now + day + '|' + pl + ';'
        });
    }

    rst.push(_ticket);
    var id = body.rst[0].id;
    var length = 32 - (id + '').length;
    for (var i = 0; i < length; i++) {
        id = '0' + id;
    }

    self.sent(nodePlatCons.command.ticketResponse, body, function (err, backMsgNode) {
        if (err) {
            cb(err, null);
        }
        else {
            cb(null, backMsgNode);
        }
    });
};

NodePlatAssist.prototype.sentCQ01 = function (bodyNode, cb) {
    var self = this;
    self.sent(nodePlatCons.command.queryTerm, bodyNode, function (err, backMsgNode) {
        if (err) {
            cb(err, null);
        }
        else {
            cb(null, backMsgNode);
        }
    });
};

var nodePlatAssist = new NodePlatAssist();

module.exports = nodePlatAssist;