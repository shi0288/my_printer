var async = require('async');
var util = require('print_util');
var mongoDBUtil = util.mongoDBUtil;

var cons=require('print_constants');
var game=cons.game;

var QueryAssist = function () {
};
var map = function () {
    var key = this.gameCode + '-' + this.termCode;
    emit(key, {count: 1, amount: this.amount});
};
var reduce = function (key, values) {
    var total = 0;
    var locate = key.indexOf('-');
    var totalMoney = 0;
    for (var i = 0; i < values.length; i++) {
        total += values[i].count;
        totalMoney += parseInt(values[i].amount);
    }
    return {gameCode: key.substr(0, locate), termCode: key.substr(locate + 1), count: total, totalMoney: totalMoney};
};



QueryAssist.prototype.getWaitQueen=function(backCall){
        //获取到所有票集合
        mongoDBUtil.db.collection('waitTerminalTicket', {safe: true}, function (err, collection) {
            collection.mapReduce(map, reduce, {out: {replace: 'test'}}, function (err, _coll, stats) {
                if (err) {
                    console.log(err);
                } else {
                    _coll.find().toArray(function (err, _result) {
                        var termInfo = [];
                        async.each(_result, function (item, callback) {
                            if (item) {
                                var _item = item;
                                if (_item.value.count == 1) {
                                    var codeTerm = _item['_id'].split('-');
                                    var gameCode = game.getInfo(codeTerm[0]);
                                    var obj = {
                                        value: {
                                            gameCode: gameCode,
                                            termCode: codeTerm[1],
                                            totalMoney: _item.value.amount,
                                            count: _item.value.count
                                        }
                                    };
                                    termInfo.push(obj);
                                    callback(null);
                                } else {
                                    mongoDBUtil.db.collection('waitTerminalTicket', {safe: true}, function (err, col) {
                                        col.aggregate({$match: {gameCode: _item.value.gameCode}}, {
                                            $group: {
                                                _id: "$termCode",
                                                total: {$sum: "$amount"}
                                            }
                                        }, function (err, _res) {
                                            var totalMoney = 0;
                                            var _termCode = '';
                                            for (var i = 0; i < _res.length; i++) {
                                                if (_res[i]['_id'] == _item.value.termCode) {
                                                    totalMoney = _res[i].total;
                                                    _termCode = _res[i]['_id'];
                                                }
                                            }
                                            var gameCode = game.getInfo(_item.value.gameCode);
                                            var obj = {
                                                value: {
                                                    gameCode: gameCode,
                                                    termCode: _termCode,
                                                    totalMoney: totalMoney,
                                                    count: _item.value.count
                                                }
                                            };
                                            termInfo.push(obj);
                                            callback(null)
                                        })
                                    });
                                }
                            };
                        }, function (err) {
                            backCall(err,termInfo);
                        })

                    })
                }
            });
        })
    };


QueryAssist.prototype.getTerminalCount=function(backCall){
    //logger.info('开始执行终端统计');
    //扫描各个终端机库中等待返回,成功库中当前票
    mongoDBUtil.db.collection('terminal', {safe: true}, function (err, collection) {
        collection.find().toArray(function (err, terminals) {
            for (var i = 0; i < terminals.length; i++) {
                mongoDBUtil.db.collection('waitTerminal' + terminals[i].terminalName, {safe: true}, function (err, wait) {
                    var body = {};
                    body.terminalId = terminals[i].id;
                    wait.count({}, {}, function (err, count) {
                        body.waitCount = count;
                        mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, _col) {
                            _col.count({'terminalId': body.terminalId}, function (err, count) {
                                body.succCount = count;
                                backCall(err,body);
                            })
                        })
                    });
                })
            }
        })
    });




}

var queryAssist = new QueryAssist();

module.exports = queryAssist;