/**
 * Created by w44 on 15-2-27.
 */

var async = require('async');
var util = require('print_util');
var mongoDBUtil = util.mongoDBUtil;
var log=util.log;

var memory = require('print_memory');
var terminalArray = memory.terminalArray;

var uuid = require('node-uuid');

var cons=require('print_constants');
var terminalCons=cons.terminalCons;

var TerminalAssist = function () {
};

TerminalAssist.prototype.printTicket= function (terminalId,ticketId,callBack) {
    log.info('---测试打印票终端机ID---' + terminalId);
    log.info('---测试打印票彩票ID---' + ticketId);
    async.waterfall([function (cb) {
        for (var i = 0; i < terminalArray.length; i++) {
            if (terminalId == terminalArray[i].terminalId && terminalArray[i].status == terminalCons.terminal.status.print) {
                cb(null, terminalArray[i], ticketId);
            }
        }
    }, function (terminal, ticketId, cb) {
        //找到需要打印的票
        mongoDBUtil.db.collection('TerminalPrintSuccess', {safe: true}, function (err, collection) {
            collection.findAndModify({'id': ticketId}, {'id': -1}, {$set: {status: terminalCons.ticket.status.wait}}, {new: true}, function (err, ticket) {
                var headNode = {cmd: '0004', sequenceId: uuid.v4().replace(/\-/g, ''), terminalId: terminal.terminalId};
                var dataLen = new Buffer(ticket.metaTicket2,'base64');
                var bodyNode = {
                    packageNum: 1,
                    nameLen: ticket.metaTicket2Name.length,
                    nameData: ticket.metaTicket2Name,
                    dataLen: dataLen.length,
                    data: ticket.metaTicket2
                };
                terminal.terminalControl.send0004(headNode, bodyNode);
            })
        });
        cb(null);
    }], function (err, result) {
        if(err){
            log.error('err: ', err); // -> null
            callBack(err);
        }else{
            callBack(null);
        }
    })
};


var terminalAssist =new TerminalAssist();
module.exports=terminalAssist;