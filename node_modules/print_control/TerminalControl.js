/**
 * Created by w44 on 15-1-8.
 */


var TerminalControl = function (socket) {
    var self = this;
    self.socket = socket;
};


TerminalControl.prototype.handle = function (headNode, bodyNode) {
    var self = this;
    console.log(JSON.stringify(headNode));
    console.log(JSON.stringify(bodyNode));
    var method = 'handle' + headNode.cmd;
    //添加判断方法逻辑，处理无此方法时的清空
    if (typeof self[method] === 'function') {
        return self[method](headNode, bodyNode);
    } else {
        console.log('找不到处理此命令的方法: '+method);
        return null;
    }
};
//    if (cmd == "0001") {
//        self.handle0001(headNode, bodyNode);
//    } else if (cmd == '0002') {
//        self.handle0002(headNode, bodyNode);
//    } else if (cmd == '0031') {
//        self.handle0003(headNode, bodyNode);
//    } else if (cmd == '0051') {
//        self.handle0003(headNode, bodyNode);
//    } else if (cmd == '0052') {
//        self.handle0052(headNode, bodyNode);
//    } else if (cmd == '0061') {
//        self.handle0061(headNode, bodyNode);
//    } else if (cmd == '0071') {
//        self.handle0071(headNode, bodyNode);
//    } else if (cmd == '0072') {
//        self.handle0072(headNode, bodyNode);
//    } else if (cmd == '1000') {
//        self.handle1000(headNode, bodyNode);
//    } else if (cmd == '0004') {
//        self.handle0004(headNode, bodyNode);
//    } else if (cmd == '2000') {
//        self.handle2000(headNode, bodyNode);
//    } else if (cmd == '0032' || cmd == '0033') {
//        self.handle0032(headNode, bodyNode);
//    } else if (cmd == '0054') {
//        self.handle0054(headNode, bodyNode);
//    } else if (cmd == '4000') {
//        self.handle4000(headNode, bodyNode);
//    }





module.exports = TerminalControl;