/**
 * Created by w44 on 15-1-12.
 */

var CronJob = require('cron').CronJob;
var nodePlatAssist = require('print_assist').nodePlatAssist;

var util = require('print_util');
var db = util.mongoDBUtil;
var digestUtil=util.digestUtil;

var cons = require('print_constants');
var nodePlatCons=cons.nodePlatCons;

var async=require('async');

var NodePlatSource = function () {
};

NodePlatSource.prototype.handle = function () {
    var self = this;
    //开启获取待出票队列任务
    self.catchWaitQueenTask.start();
};

NodePlatSource.prototype.catchWaitQueenTask = new CronJob('*/5 * * * * *', function () {
    var self = this;
    console.log("###########################   get tickets to waitQueen    ###########################");
    self.getWaitTickets();
});


NodePlatSource.prototype.getWaitTickets = function () {
    nodePlatAssist.sentP01(function (err, backMsgNode) {
        if (err) {
           // self.getWaitTickets();
            console.log(err);
        } else {
            //获取到订单集合
            var backBodyStr = digestUtil.check(backMsgNode.head, nodePlatCons.key, backMsgNode.body);
            var backBodyNode = JSON.parse(backBodyStr);
            if(backBodyNode && backBodyNode.repCode == '0000')
            {
                var tickets = backBodyNode.rst;
                if(tickets.length == 0)
                {
                    console.log("no tickets to print........");
                    return;
                }
                //直接入等待票库
                db.collection('waitTerminalTicket', {safe: true}, function (err, collection) {
                    async.each(tickets, function (item) {
                        collection.insert(item, function () {
                            console.log(item.id + "已入等待终端处理库");
                        });
                    }, function (err) {
                    });
                });
            }
        }
    });
};




var nodePlatSource = new NodePlatSource();

nodePlatSource.handle();

module.exports = nodePlatSource;



